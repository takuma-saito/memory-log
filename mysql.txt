mysql 入門
============================

mysql とは
----------------------------


mysql のインストール方法
----------------------------
パッケージ管理ソフトからインストールできる。

    $ sudo yum install mysql mysql-server mysql-devel


mysqlの初期設定
----------------------------
mysql の設定ファイル（/etc/my.cnf）にエンコード設定を追加する

    [mysqld]
    character-set-server = utf8 # 追加する

mysqld を実行し、`mysql_secure_installation` を実行する

    $ /etc/init.d/mysqld start
    (Mac: sudo /opt/local/lib/mysql55/bin/mysqld_safe &)
    $ mysql_install_db --user=mysql
    $ /usr/bin/mysqladmin -u root password '新しいパスワード'
    $ /usr/bin/mysql_secure_installation

デフォルトでutf8が有効になっていない場合がある。
その場合は設定ファイル`my.cnf`を修正し、utf8を有効にする

    $ sudo emacs /etc/mysql/my.cnf
    
    [mysqld]
    ...
    default-character-set = utf8
    skip-character-set-client-handshake
    
    [mysql]
    ...
    default-character-set=utf8
    
    [client]
    ...
    default-character-set=utf8
    
    [mysqldump]
    ...
    default-character-set=utf8

mysql 端末にログインし、エンコードが全てutf8になっているか確認する。

    $ mysql -u ユーザー名 -pパスワード
    
    root:(none) > SHOW VARIABLES LIKE '%character%';
    +--------------------------+----------------------------+
    | Variable_name            | Value                      |
    +--------------------------+----------------------------+
    | character_set_client     | utf8                       |
    | character_set_connection | utf8                       |
    | character_set_database   | utf8                       |
    | character_set_filesystem | binary                     |
    | character_set_results    | utf8                       |
    | character_set_server     | utf8                       |
    | character_set_system     | utf8                       |
    | character_sets_dir       | /usr/share/mysql/charsets/ |
    +--------------------------+----------------------------+

ユーザー管理
----------------------------

* ユーザー追加:
    `GRANT ALL PRIVILEGES ON dbname.* TO \`user\`@localost IDENTIFIED BY 'password'`;
    `FLUSH PRIVILEGES`

* 利用できるストレートエンジンの一覧を出力:
    `SHOW ENGINES;`

* テーブルの状態を確認:
    `SHOW CREATE TABLE テーブル名`

* パスワード再発行:
    
    $ mysqld-safe --skip-grant-tables --user=raoot &
    $ mysql -u root
    
* コマンドラインからクエリを実行

    $ mysql -h hostname -u username -ppassword -N -s -e "SELECT * FROM table;" dbname

エクスポート・インポート
----------------------------
テーブルをCSV形式でエクスポートする

    mysql > SELECT id, birthplace, town FROM table_name 
      INTO OUTFILE "/path/to/csv" 
      FIELDS TERMINATED BY ","
      ENCLOSED BY '"'
      LINES TERMINATED BY "\n";

CSV形式のデータをインポートする。
この時対応するデータがnullの場合だけ更新する

    mysql > LOAD DATA INFILE '/path/to/csv'
      INTO TABLE table_name
      FIELDS TERMINATED BY ","
      LINES TERMINATED BY "\n"
      (one, two, three, @vfour, five)
      SET four = nullif(@vfour,'');;

CSVデータから対応する特定のデータのアップデートを行う

    mysql > CREATE TEMPORARY TABLE your_temp_table LIKE your_table;
    
    mysql > LOAD DATA INFILE '/tmp/your_file.csv'
    INTO TABLE your_temp_table
    FIELDS TERMINATED BY ','
    (id, product, sku, department, quantity); 
    
    mysql > UPDATE your_table
    INNER JOIN your_temp_table on your_temp_table.id = your_table.id
    SET your_table.quantity = your_temp_table.quantity;
    
    mysql > DROP TEMPORARY TABLE your_temp_table;
    

逆引き
------

* socket へのパスを取得する: `mysqladmin version`
* テーブルのスキーマのみダンプ: `SHOW CREATE TABLE tablename`
* テーブルのスキーマ表示: `DESC tablename`
* テーブルのスキーマのみ抽出(cli）: `mysqldump -d dbname tablename1 tablename2 ...`
* テーブルの insert 文のみ抽出(cli): `mysqldump -t dbname tablename1 tablename2 ...`
* UPDATE 文でループを回す:

    mysql > UPDATE threads AS `r`, 
              (SELECT * FROM threads) AS `l` 
            SET  r.updated = r.created 
            WHERE l.id = l.id;


メモ
----------------------------

### mysqlのパスワード・ユーザーを省略する ###
ホームディレクトリに.my.cnfファイルを作成し、
ユーザー名・パスワード・ホスト名などを設定すれば`mysql`コマンドだけで
mysqlのターミナルに入れるようになる。

.my.cnf の例）

    [client]
    user=admin
    password=adminpass
    host=localhost
    port=3306

    [mysql]
    prompt='[\\c] \\u:\\d > '
    show-warnings

### エラー ###

*1: Cannot proceed because system tables used by Event Scheduler were found damaged at server start*
というエラーが発生する場合。
mysql のスキーマが壊れているので、それを下記のコマンドで修正すればよい。

    $ mysql_upgrade -u username -ppassword

### hacking ###

* 出力: SELECT * FROM files INTO OUTFILE '/tmp/hoge.txt';
* ファイル入力: LOAD DATA INFILE '/tmp/hoge1.txt' INTO TABLE files LINES TERMINATED BY '\n\r';
* カラムを明示的に指定する場合: LOAD DATA INFILE '/tmp/hoge1.txt' INTO TABLE files LINES TERMINATED BY '\n\r' (@text) SET text=@text;
* ホスト名: SELECT @@hostname
* バージョン名: SELECT @@version



