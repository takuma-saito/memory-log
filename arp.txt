arpの挙動についてなど
============================

基本事項
----------------------------

アープテーブルの確認

    $ arp -an

アープテーブルをtcpdumpで確認

    $ tcpdump -vv -i interface arp


arp のスプーフィング
----------------------------

まずパッケージ管理ソフトからsdiffをインストールしておく。

arp プロトコルはIPアドレスからMACアドレスを検索する仕組み。
IPの基礎知識として**送信先のIPアドレスとMACアドレス, 自分のIPアドレス・MACアドレス**
が分かっていない送信できない。

arpが登場するのは, *送信先のIPアドレス, 自分のIPアドレス・MACアドレスが分かっているが、送信先のMACアドレスが分からない*時である。
各PCにはarpテーブルというIPアドレスとMACアドレスの対応表が存在する。
まずこのarpテーブルで検索し、目的のIPアドレスがない場合はarp requestをネットワーク上にブロードキャストする。

このarp requestには自分のIPアドレスと送信先のIPアドレスが入っている。
ネットワーク内に送信先アドレスと同じIPアドレスのPCが存在する場合はarp reqly を送信する。
arp replyを受けっ取ったPCはそれを新しくarpテーブルに追加する。
これで送信先のIPアドレスとMACアドレス, 自分のIPアドレス・MACアドレスが全て揃ったので、データの送受信ができる。

このarpプロトコルを利用した攻撃には主に2種類ある。

1. arpテーブルを溢れさせる
2. arp replyを偽装する

それぞれについて説明する。

1. arpテーブルを溢れさせる

arpテーブルはコンピューターのメモリ上に存在するので、有限である。
ルーターはarpテーブルを溢れた場合、プロミスキャスモードという
サブネットワーク全体にパケットを流す通信モードでパケットを送信し始める。

これを悪用して大量にarp replyを送信すれば同ネットワーク内の他のPCの送受信内容を傍受できる。

2. arp replyを偽装する

arp の仕組みに認証はない。
つまり、送信されたarp replyが正しいかどうかを判断する手段がないのである。
これを利用してルーターのIPアドレスを偽装するのが2.のゲートウェイ書き換えである。

もしあるPCがarp replyを受け取った場合、
そのPC内のarpテーブルを更新してしまう。

よってある攻撃対象PCに向けて頻繁に偽装したarp replyを送信すれば
自分のIPアドレスを偽装できる。

この偽装したIPアドレスをルーターのIPアドレスに設定した場合
そのPCがWAN側とどのような通信をしているのか全て知ることができる。


### arpテーブルを溢れさせる ###

ルーターに不正なmacアドレス大量に送りつけ, プロミスキャスモードでの通信にさせる。
これらの攻撃には macof を使う。
arp request で不正なMACアドレスを大量に生成する

    $ sudo macof -i eth0 -s 192.168.1.10 -d 192.168.1.13

* `-i`: インターフェイスカード
* `-s`: ターゲットに送りつけるソースアドレス
* `-d`: 攻撃対象のアドレス


### arp reply を偽装する ###

arpレベルでゲートウェイを書き変え, 自分のPCをパケットが通過するように設定する。

*通常の構成*
攻撃対象 <-> ルーター <-> WAN

*arp攻撃時*
攻撃対象 <-> 自分のPC <-> ルーター <-> WAN

arpで攻撃対象の送信先ポートを書き換え下記の構成にする。

*パケット送信時*
攻撃対象 -> 自分のPC <-> ルーター

*パケット受信時*
攻撃対象 <- ルーター

    $ sudo arpspoof -i eth0 -t 192.168.1.13 192.168.1.1

* `arpspoof ip`: arp でIP送信先を偽装
* `-t`: arpを書き換える攻撃対象アドレス
* `-i`: インターフェイス

ただしこれだけでは、ルーター側から攻撃対象に送られるパケットは覗き見ることができない。
そこでルーターにも不正なarp replyを送信し、攻撃対象のMACアドレスを自分のMACアドレスに書き換える。

    $ sudo arpspoof -i eth0 -t 192.168.1.1 192.168.1.13

これでパケット受信時の経路が

攻撃対象 <- 自分のPC <- ルーター

となったので、攻撃対象がルーターに送信する内容は全て傍受することができるようになった。

注）
基本的にlinux系のサーバーはデフォルトでip_forwardが禁止されているので、
これを許可する必要がある。

    $ sudo sysctl -w net.ipv4.ip_forward=1

関連するカーネルパラメーター
----------------------------
{if}はeth0などのNICを表す。

ARP cache エントリの有効寿命を計算する基本の秒数。

    net.ipv4.neigh.{if}.base_reachable_time

ARP chace の寿命最小値

    net.ipv4.neigh.{if}.locktime
