ゾーンファイルの読み方・書き方
============================

ゾーンファイル関係
----------------------------

通常ゾーンファイルは以下のような書式で記述する.
まず最初に TTL を設定する.
TTL を設定することで他のネームサーバに対して、
このゾーンの情報をキャッシュして良い期間を知らせる.
（TTL の単位は秒数であることに注意すること）

以下は例である.

    $TTL 86400    ; 60 (second) * 60 (minutes)  * 24 (hours) = 86400

この場合は 1 日だけゾーン情報のキャッシュを許している.
また、 ; 記号はゾーンファイル内のコメントである.

次に各レコードごとに以下の書式で各パラメーターを設定していく.

（管理下のドメイン名） （ネットワーククラス） （レコードタイプ） （各レコードタイプによって異なる値）

レコードは以下の種類が存在する.

1. SOAレコード
2. A レコード
2. NS レコード
3. MX レコード
4. TXT レコード
5. CNAME レコード
6. PTR レコード
7. CNAME レコード

管理ドメイン名にはアスタリスク * 記号を使用することができる.
また、ネットワークアドレスは通常インターネットを表す IN しか使用されない.

各レコードの種類について以下で詳しく説明する.

### SOA レコード ###

SOA レコードはゾーン管理用の情報を定義するために存在する.
bind などでは TTL の後で記入しなければならない.
記入例を以下に示す

    @ IN SOA   ns1.example.jp. postmaster.example.jp. (
                  2003081901   ; Serial
                  3600             ; Refresh  
                  900              ; Retry
                  604800         ; Expire
                  3600            ; Negative cache TTL
                  )

以下のような書式になっている.

@ IN SOA（管理ホスト名）（コンタクト先）
        (
            （シリアル番号）
            （リフレッシュ時間）
            （リトライ時間）
            （エクスパイア時間）
            （最小TTL）
            )

* 管理ホスト名: DNS サーバーの FQDN （要は DNS サーバーのドメイン名）を入れる. またこの際トップドメインの . も含めること.
* コンタクト先: DNS 管理者のメールアドレスを入れる.
                postmaster@example.jp. の場合は postmaster.example.jp の様に @ が . に変更して記入する.
* シリアル番号: シリアル番号はゾーンを更新する度に変更しなければならない.
                なぜならば、このシリアル番号を拠り所にして他の DNS サーバーは変更を検知するため.
* 最小TTL:    : 通常存在しない A レコードなどを検索して失敗した場合 DNS サーバーはもう一度問い合わせず, その失敗をキャッシュする.
                この失敗応答をキャッシュするための最小時間を指定する.
                この最小 TTL が過ぎた場合の問い合わせにはキャッシュが適用されない

以下のパラメーターは全てマスターサーバーとスレーブサーバーに関するパラメーター.
（マスターサーバーからスレーブサーバーに対して行う指示のこと）

* リフレッシュ時間: スレーブサーバーがマスターサーバーへ再度問い合わせを行うまでの時間
* リトライ時間: *マスターサーバーから応答がない場合*に再度問い合わせを行う時間
* エクスパイア時間: *マスターサーバーからの応答が一定期間経っても得られない場合*、スレーブサーバー内の情報を削除する.

### A レコード ###

A レコードはドメインと IP アドレスを関連付けるもの.
ドメインから IP アドレスへの変換は通常 A レコードを見て行われる.

以下は記述例.

    www    IN A 12.123.238.2

### NS レコード ###

NS レコードは巨大な DNS の階層構造を作るための唯一の手段.
通常はより下の階層に位置するネームサーバーに対して、権限の委譲を行う.
IP アドレスではなくホスト名で指定を行うので、注意すること.

以下は記述例

    hoge.jp.  IN NS ns1.hoge.jp
    ns1.hoge.jp  IN A xx.xx.xx.xx

上記の例の場合, ns1.hoge.jp に hoge.jp に問い合わせの委譲を行なっている.

### MX レコード ###

メールの転送先を表すレコード.
MX レコードには優先度を示す数値が入っており、小さい方から優先的に利用される.

### CNAME レコード ###

CNAME （Canonical Name）は別名を与えるためのレコード.

### PTR レコード ###

PTR レコードは IP アドレスからホスト名を検索するためのレコード.
通常 DNS はホスト名から IP アドレスの検索を行うが、逆に IP アドレスからホスト名を問い合わせることも出来る.
通常の場合を正引き, IP アドレスからホスト名を問い合わせる場合は逆引きとそれぞれ呼ぶ.

### TXT レコード ###

ドメインの付加的な属性を入れる.
セキュリティ用の拡張規格 SPF（Sender Policy Framework） 
などは TXT レコードを応用して実現している.




   
